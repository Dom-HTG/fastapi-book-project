name: Deployment Workflow

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.3'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Copy files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY_PAIR }}
          source: "./*"
          target: "/home/ec2-user/app"
          overwrite: true
          debug: true

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY_PAIR }}
          script: |
            set -e
            set -x # see each command via debug mode
            echo "Starting deployment on EC2..."

            # Retrieve pem
            echo "${{ secrets.EC2_KEY_PAIR }}" > ec2_key.pem
            chmod 600 ec2_key.pem

            # Test SSH connection
            ssh -i ec2_key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} "echo Connected successfully" || exit 1


            # Move to project directory
            cd /home/ec2-user/app

            # Ensure Python & Pip are available
            if ! command -v python3 &>/dev/null; then
              echo "Installing Python3..."
              sudo yum install python3 -y
            fi
            python3 -m ensurepip --default-pip

            # Remove redundant environment
            if [ -d "venv" ]; then
              echo "Removing existing virtual environment..."
              rm -rf venv
            fi

            # Set up virtual environment
            python3 -m venv venv
            source venv/bin/activate

            # Install dependencies
            venv/bin/pip install --upgrade pip
            venv/bin/pip install -r requirements.txt

            # Install & Configure Nginx if not installed
            if ! command -v nginx &>/dev/null; then
              echo "Installing Nginx..."
              sudo yum install nginx -y
            fi
            sudo cp ./nginx/nginx.conf /etc/nginx/nginx.conf
            sudo systemctl reload nginx 

            # Restart application
            pkill -f "uvicorn" || echo "No running Uvicorn process found"
            echo "Starting FastAPI application..."
            nohup venv/bin/uvicorn main:app --host 0.0.0.0 --port 8000 > app.log 2>&1 &
            disown

            sleep 5
            if pgrep -f "uvicorn main:app" > /dev/null; then
                echo "FastAPI application started successfully"
                ps aux | grep "uvicorn main:app"
            else
                echo "Failed to start application"
                echo "Log contents:"
                cat app.log
                exit 1
            fi
